"use server"

import connect from "./db"
import {parseCookies, setCookie} from "nookies";
import jwt from "jsonwebtoken";

const  handler = async (req, res) => {
    const connection = await connect();
    const clientData = req.body;

    const photo = Buffer.from(clientData.photo, 'base64').toString('base64');
    const userData = clientData.userData;

    try {
        const payload =  {
            email: userData.email,
            login: userData.login,
            password: userData.password,
            photo: photo
        }

        const token = jwt.sign(payload, process.env.JWT_SECRET, {
            expiresIn: "1h", // —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞
        });

        setCookie({ res }, "token", token, {
            maxAge: 3600, // —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è cookie –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
            path: "/", // –ø—É—Ç—å, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º cookie –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω
        });
    } catch (e) {
        console.log(e);
    }

    try {
        const [rows] = await connection.query('SELECT * FROM user WHERE login = ?', [userData.login]);
        if (rows.length > 0) {
            await connection.query('UPDATE user SET photo = ? WHERE login = ?', [photo, userData.login]);
            res.status(200).json({status: '–∞–≤–∞—Ç–∞—Ä –æ–±–Ω–æ–≤–ª–µ–Ω ü•π'});
        } else {
            res.status(404).json({status: '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω'});
        }
    } catch (e) {
        res.status(403).json({status: '—á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ ‚ò†Ô∏è'});
        console.log(e);
    }
    connection.end();
}

export default handler;